<!DOCTYPE html>
<html lang="en" style="scrollbar-gutter: stable;" class="bg-[#F7F7F7] dark:bg-slate-800">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="csrf-token" content={get_csrf_token()} />
    <.live_title suffix={Application.get_env(:chatgpt, :title)}>
      <%= assigns[:page_title] || "" %>
    </.live_title>
    <link phx-track-static rel="stylesheet" href={~p"/assets/app.css"} />
    <script defer phx-track-static type="text/javascript" src={~p"/assets/app.js"}>
    </script>
  </head>
  <body class="bg-[#F7F7F7] dark:bg-slate-800">
    <div class="drawer drawer-mobile">
      <input id="my-drawer-2" type="checkbox" class="drawer-toggle" />
      <div class="drawer-content ">
        <div class="
  sticky top-0 z-30 flex h-16 w-full justify-center bg-opacity-90 backdrop-blur transition-all duration-100
  bg-base-100 text-base-content shadow-sm
  ">
          <header class="navbar bg-base-100">
            <div class="navbar-center flex">
              <div class="block md:hidden flex-none">
                <label
                  for="my-drawer-2"
                  class="btn btn-square btn-ghost my-drawer-2 drawer-button"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    class="inline-block w-5 h-5 stroke-current"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z"
                    >
                    </path>
                  </svg>
                </label>
              </div>
              <ul class="menu menu-horizontal px-1">
                <li tabindex="0">
                  <a>
                    Model: <%= Enum.find(
                      assigns[:models],
                      &(&1.id == String.to_atom(assigns[:model]))
                    ).name %>
                    <svg
                      class="fill-current"
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      viewBox="0 0 24 24"
                    >
                      <path d="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" />
                    </svg>
                  </a>
                  <ul class="p-2 z-10 bg-base-100">
                    <%= for {model, name} <- Enum.map(assigns[:models], & {&1.id, &1.name}) do %>
                      <li>
                        <.link navigate={
                          URI.parse(assigns.conn.request_path)
                          |> URI.append_query("model=#{model}")
                          |> URI.to_string()
                        }>
                          <%= name %>
                        </.link>
                      </li>
                    <% end %>
                  </ul>
                </li>
              </ul>
            </div>
          </header>
        </div>
        <!-- Page content here -->
        <div class="mx-6 relative bg-[#F7F7F7] dark:bg-slate-800">
          <%= @inner_content %>
        </div>
      </div>

      <div class="drawer-side">
        <label for="my-drawer-2" class="drawer-overlay"></label>

        <aside class="bg-[#202123] text-[#eee] w-80" data-theme="halloween">
          <div class="z-20 bg-opacity-90 backdrop-blur sticky top-0 items-center gap-2 px-4 py-2 lg:flex">
            <div class="font-title inline-flex text-lg transition-all duration-200 md:text-3xl">
              <a href="/" class="btn btn-ghost normal-case text-xl">
                <%= assigns[:page_title] || Application.get_env(:chatgpt, :title) %>
              </a>
            </div>
          </div>

          <div class="h-4"></div>

          <ul class="menu menu-compact flex flex-col p-0 px-4">
            <li class="">
              <.link
                class={Map.get(assigns, :mode, :chat) == :chat && "active"}
                navigate={~p"/chat"}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-6 h-6"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M2.25 12.76c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.076-4.076a1.526 1.526 0 011.037-.443 48.282 48.282 0 005.68-.494c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
                  />
                </svg>
                Chat
              </.link>
            </li>
          </ul>

          <div class="h-4"></div>

          <ul class="menu flex flex-col p-0 px-4">
            <!-- Sidebar content here -->
            <li class="menu-title">Scenarios</li>
            <%= for scenario <- assigns[:scenarios]  do %>
              <li>
                <.link
                  class={"#{active_scenario(Map.get(assigns, :scenario, nil), scenario)}"}
                  navigate={~p"/scenario/#{scenario.id}"}
                >
                  <%= scenario.name %>
                </.link>
              </li>
            <% end %>
          </ul>
        </aside>
      </div>
    </div>
  </body>
</html>
